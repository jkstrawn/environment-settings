{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"React Component": {
		"prefix": [
			"component",
			"react-component"
		],
		"body": [
			"import React, { Component } from 'react';",
			"",
			"interface State {",
			"",
			"}",
			"",
			"class NewComponent extends Component<{}, State> {",
			"",
			"\tconstructor(props: Readonly<{}>) {",
			"\t\tsuper(props);",
			"",
			"\t\tthis.state = {",
			"",
			"\t\t};",
			"\t}",
			"",
			"\trender() {",
			"\t\treturn <div>",
			"",
			"\t\t</div>",
			"\t}",
			"}",
		],
		"description": "A new react component."
	},
	"React Page": {
		"prefix": [
			"page",
			"react-page"
		],
		"body": [
			"import React, { Component } from 'react';",
			"",
			"interface State {",
			"",
			"}",
			"",
			"class Page extends Component<RouteProps, State> {",
			"",
			"\tconstructor(props: Readonly<RouteProps>) {",
			"\t\tsuper(props);",
			"",
			"\t\tthis.state = {",
			"",
			"\t\t};",
			"\t}",
			"",
			"\trender() {",
			"\t\treturn <div>",
			"",
			"\t\t</div>",
			"\t}",
			"}",
			"",
			"export default withRouter(Page);",
		],
		"description": "A new react component."
	}
}